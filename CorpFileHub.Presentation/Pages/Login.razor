@page "/login"
@inject HttpClient Http
@inject NavigationManager Nav

<h3>Вход в систему</h3>

<EditForm Model="_model" OnValidSubmit="OnSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3">
        <label for="email" class="form-label">Email</label>
        <InputText id="email" class="form-control" @bind-Value="_model.Email" />
    </div>
    <div class="mb-3">
        <label for="password" class="form-label">Пароль</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="_model.Password" />
    </div>
    <button type="submit" class="btn btn-primary">Войти</button>
</EditForm>

@if (!string.IsNullOrEmpty(_error))
{
    <div class="text-danger mt-2">@_error</div>
}

@code {
    private LoginModel _model = new();
    private string? _error;

    private async Task OnSubmit()
    {
        _error = null;
        try
        {
            var response = await Http.PostAsJsonAsync("api/auth/login", _model);
            if (response.IsSuccessStatusCode)
            {
                Nav.NavigateTo("/");
            }
            else
            {
                _error = "Неверный email или пароль";
            }
        }
        catch (Exception ex)
        {
            _error = $"Ошибка: {ex.Message}";
        }
    }

    private class LoginModel
    {
        [Required(ErrorMessage = "Введите email")]
        [EmailAddress(ErrorMessage = "Некорректный email")]
        public string Email { get; set; } = string.Empty;

        [Required(ErrorMessage = "Введите пароль")]
        public string Password { get; set; } = string.Empty;
    }
}
