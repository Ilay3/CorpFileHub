@if (IsVisible)
{
    <div class="modal-overlay">
        <div class="modal-container">
            <div class="modal-header-yellow">
                <h5 class="modal-title">
                    <i class="bi bi-arrows-move text-warning me-2"></i>
                    Перемещение папки
                </h5>
                <button type="button" class="btn-close-yellow" @onclick="Cancel">
                    <i class="bi bi-x"></i>
                </button>
            </div>
            <EditForm Model="model" OnValidSubmit="HandleValidSubmit">
                <div class="modal-body-yellow">
                    <div class="form-group-yellow">
                        <label class="form-label-yellow" for="parent">Новая папка</label>
                        <select id="parent" class="form-control-yellow" @bind="model.NewParentId">
                            <option value="">Корень</option>
                            @foreach (var f in Folders)
                            {
                                if (f.Id != FolderId)
                                {
                                    <option value="@f.Id">@f.Path</option>
                                }
                            }
                        </select>
                    </div>
                    @if (!string.IsNullOrEmpty(ErrorMessage))
                    {
                        <div class="alert-yellow alert-danger">@ErrorMessage</div>
                    }
                </div>
                <div class="modal-footer-yellow">
                    <button type="button" class="btn-secondary-yellow" @onclick="Cancel">Отмена</button>
                    <button type="submit" class="btn-primary-yellow">Переместить</button>
                </div>
            </EditForm>
        </div>
    </div>
}

@code {
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public int FolderId { get; set; }
    [Parameter] public EventCallback OnSuccess { get; set; }
    [Parameter] public EventCallback OnCancel { get; set; }
    [Parameter] public List<FolderTreeDto> Folders { get; set; } = new();

    [Inject] public HttpClient Http { get; set; } = default!;

    private MoveModel model = new();
    private string ErrorMessage = string.Empty;

    private async Task HandleValidSubmit()
    {
        try
        {
            var dto = new { newParentFolderId = model.NewParentId == 0 ? (int?)null : model.NewParentId };
            var response = await Http.PutAsJsonAsync($"api/folders/{FolderId}/move", dto);
            if (response.IsSuccessStatusCode)
            {
                await OnSuccess.InvokeAsync();
            }
            else
            {
                var error = await response.Content.ReadFromJsonAsync<ErrorResponse>();
                ErrorMessage = error?.error ?? "Ошибка";
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = ex.Message;
        }
    }

    private async Task Cancel() => await OnCancel.InvokeAsync();

    public class MoveModel
    {
        public int? NewParentId { get; set; }
    }

    private class ErrorResponse
    {
        public string? error { get; set; }
    }
}

<style>
.modal-overlay {position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.6);display:flex;align-items:center;justify-content:center;z-index:1050;}
.modal-container {background:white;border-radius:8px;width:90%;max-width:400px;border:3px solid #ffc107;}
.modal-header-yellow {background:linear-gradient(135deg,#ffc107,#ffeb3b);padding:1rem;display:flex;align-items:center;justify-content:space-between;border-radius:5px 5px 0 0;}
.modal-body-yellow {padding:1rem;}
.modal-footer-yellow {padding:0 1rem 1rem 1rem;display:flex;justify-content:flex-end;gap:.5rem;}
.btn-close-yellow{background:none;border:none;}
.form-control-yellow{width:100%;padding:.5rem;}
.form-group-yellow{margin-bottom:1rem;}
.alert-yellow{margin-top:.5rem;}
.btn-primary-yellow{background:#ffc107;border:none;padding:.5rem 1rem;}
.btn-secondary-yellow{background:#6c757d;border:none;padding:.5rem 1rem;color:white;}
</style>
